; Есть ли сумма подряд идущих положительных чисел превосходящих К.

cseg segment                       
assume cs:cseg, ds:cseg, ss:cseg, es:cseg               ;      
org 100h                                                ;
Start: 
  mov ax,7                                              ;Помещаем в ах - 7 (назначаем число К) и ..---->
  push ax                                               ;---->..и сохраняем его в стэк. 
  mov si,offset Array                                   ; Загружаем в si адрес (смещение) нашего массива (Array) (в si,для работы с командой lodsb)
PROVERKA:                                               ; -------------| Начинаем проверку массива |-----------------
  lodsb                                                 ; Загружаем в аl первый элемент массива (lodsb загружает в al байт из адреса,указанного в si и увеличи-)
  cmp al,24h                                            ; вает si на 1) Сравниваем al=24?  (здесь 24h - используем,как индикатор конца массива),т.е. число
                                                        ; 24 уже не входит в наш массив и не берется в расчет.
  je STRCOMP                                            ; Если al=24(конец массива),то прыгаем на метку STRCOMP
  test al,al                                            ; Проверяем,не отрицат.ли число? 
  js NULLSUM                                            ; Если да,то прыгаем на метку NULLSUM и обнуляем регистр bx,в котором будем суммировать пол.числа
  add bx,ax                                             ; Если не конец массива/отр.число,значит у нас положит.Суммируем число в bx.Попросту - прибавим к bx.
  pop ax                                                ; Достаём из стека наше число К (ax=7)
  push ax                                               ; И сразу поместим обратно (ax при этом сохраняет значение,вынутое из стека)
  cmp bx,ax                                             ; И сравниваем сумму (bx) со значением числа К (ах)
  ja STRCOMP                                            ; Если bx БОЛЬШЕ,значит требуемая сумма найдена.Делаем джамп на вывод строки String1.
  jmp PROVERKA                                          ; Если bx<=ax,то продолжим проверку. Джамп на метку PROVERKA.

NULLSUM:                                                ; Метка,на которую будем прыгать,в случае,если текущ.элемент массива  -  отриц.число
  xor bx,bx                                             ; Обнуляем сумму
  jmp PROVERKA                                          ; Прыгаем на метку PROVERKA (будем проверять след.элемент массива)
STRCOMP:                                                ; Метка вывода String1 и повторного сравнения bx-ax для соответств.вывода ответа:есть или нет
                                                        ; требуемой суммы
  mov ah,9
  mov dx,offset String1
  int 21h                                               ; Выводим строку String1 (цифры нашего массива)
  
  pop ax                                                ; Достаем из стека число K.
  cmp bx,ax                                             ; Повторно сравниваем для вывода соответств.строки YES/NO                                             
  jle NO                                                ; Если bx<=ax, то прыгаем на метку NO 
YES:                                                    ; Если же bx>ах,то выполняется эта метка (выводим строку 2(YES) и прыгаем на EXIT)
  mov ah,9
  mov dx,offset String2                                 ; 
  int 21h
  jmp EXIT
NO:                                                     ; Метка NO.Здесь выводим строку 3,в случае,если bx<=ax
  mov ah,9
  mov dx,offset String3
  int 21h
EXIT:                                                   ;Метка выхода
  mov ah,10h
  int 16h                                               ; Программа завершится только после нажатия любой клавиши..   
  
  int 20h                                               ; Выход из программы..

Array db 3,-2,1,-9,-4,1,6,2,-3,-9,24h
String1 db ' 3, -2,  1, -9, -4,  1,  6,  2, -3, -9.$'   ; Строка вывода на дисплей визуальный просмотр нашего массива. 
String2 db 10, 13, 'Required sum: YES$'                 ; Эта строка выведется в случае  bx>ax
String3 db 10, 13, 'Required sum: NO$'                  ; Эта  - если bx<=ax
cseg ends
end Start
  
                                  